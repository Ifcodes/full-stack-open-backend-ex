{"version":3,"sources":["services/phonebook.js","components/addContactform.js","components/contactsDisplay.js","components/searchComp.js","components/notification.jsx","App.js","index.js"],"names":["baseUrl","phoneService","getAll","axios","get","del","id","obj","delete","create","post","update","put","AddContact","setNewName","newName","setPersons","setNumber","newNumber","persons","setNotification","onSubmit","event","preventDefault","checkNewName","toLowerCase","personExist","find","person","name","numberExist","phoneNumber","window","confirm","numberUpdate","then","response","map","p","setTimeout","catch","error","updateNumber","nameUpdate","updateName","addName","length","number","data","addContact","style","margin","value","onChange","target","required","e","type","ContactName","props","onClick","handledelete","ContactList","nameFilter","personToDisplay","trim","filter","includes","contactToDel","Filter","setNameFilter","placeholder","Notifications","message","className","App","useState","notification","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c82b6f89.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = \"http://localhost:3002/api/persons\";\n\nconst getAll = () => {\n  return axios.get(baseUrl);\n};\n\nconst del = (id, obj) => {\n  return axios.delete(`${baseUrl}/${id}`, obj);\n};\nconst create = (obj) => {\n  return axios.post(baseUrl, obj);\n};\nconst update = (id, obj) => {\n  return axios.put(`${baseUrl}/${id}`, obj);\n};\nconst phoneService = {\n  getAll,\n  del,\n  create,\n  update,\n};\n\nexport default phoneService;\n","import React from \"react\";\nimport phoneService from \"../services/phonebook\";\n\nconst AddContact = ({\n  setNewName,\n  newName,\n  setPersons,\n  setNumber,\n  newNumber,\n  persons,\n  setNotification,\n}) => {\n  const handleNewNames = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumbers = (e) => {\n    setNumber(e.target.value);\n  };\n\n  const addContact = () => {\n    const addName = {\n      name: newName,\n      id: persons.length + 1,\n      number: `${newNumber}`,\n    };\n    phoneService.create(addName).then((response) => {\n      setNewName(\"\");\n      setNumber(\"\");\n      setNotification(\"Contact added successfully\");\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000);\n    });\n    phoneService.getAll().then((response) => {\n      setPersons(response.data);\n    });\n  };\n\n  const updateNumber = (person) => {\n    const numberUpdate = { ...person, phoneNumber: newNumber };\n\n    phoneService\n      .update(person.id, numberUpdate)\n      .then((response) => {\n        setPersons((persons) =>\n          persons.map((p) => {\n            if (person.id === p.id) return numberUpdate;\n            return p;\n          })\n        );\n        setNotification(`Number changed successfully to ${newNumber}`);\n        setTimeout(() => {\n          setNotification(null);\n        }, 5000);\n      })\n      .catch((error) => {\n        setNotification(\n          `Information of ${person.name} has already been removed from server`\n        );\n        setTimeout(() => {\n          setNotification(null);\n        }, 5000);\n      });\n  };\n\n  const updateName = (person) => {\n    const nameUpdate = { ...person, name: newName };\n\n    phoneService\n      .update(person.id, nameUpdate)\n      .then((response) => {\n        setPersons((persons) =>\n          persons.map((p) => {\n            if (person.id === p.id) return nameUpdate;\n            return p;\n          })\n        );\n        setNotification(`Name changed successfully to ${newName}`);\n        setTimeout(() => {\n          setNotification(null);\n        }, 5000);\n      })\n      .catch((error) => {\n        setNotification(\n          `Information of ${person.name} has already been removed from server`\n        );\n        setTimeout(() => {\n          setNotification(null);\n        }, 5000);\n      });\n  };\n\n  const checkAddContact = (event) => {\n    event.preventDefault();\n\n    const checkNewName = newName.toLowerCase();\n    const personExist = persons.find(\n      (person) => person.name.toLowerCase() === checkNewName\n    );\n    const numberExist = persons.find(\n      (person) => person.phoneNumber === newNumber\n    );\n\n    if (personExist) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook. Do you want to replace old number with new one?`\n        )\n      ) {\n        updateNumber(personExist);\n        // setNewName(\" \");\n      }\n    } else if (numberExist) {\n      if (\n        window.confirm(\n          `PhoneNumber is already added to phonebook. Do you want to replace contact name with ${newName}?`\n        )\n      ) {\n        updateName(numberExist);\n        setNewName(\" \");\n        setNumber(\" \");\n      }\n    } else {\n      addContact();\n    }\n  };\n\n  const styles = {\n    margin: \"1rem 0\",\n  };\n  return (\n    <form onSubmit={checkAddContact}>\n      <div style={styles}>\n        name: <input value={newName} onChange={handleNewNames} required />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumbers} required />\n      </div>\n      <div>\n        <button type=\"submit\">Add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddContact;\n","import React from \"react\";\nimport phoneService from \"../services/phonebook\";\n\nconst ContactName = (props) => {\n  return (\n    <>\n      <p>\n        {props.person} <br />\n        {props.phoneNumber}{\" \"}\n        <button onClick={props.handledelete} style={{ margin: \"0 1rem\" }}>\n          Delete\n        </button>\n      </p>\n    </>\n  );\n};\n\nconst ContactList = ({ nameFilter, persons, setPersons, setNotification }) => {\n  const filtered = () => {\n    const filteredPerson = persons.filter((person) =>\n      person.name.toLowerCase().includes(nameFilter.toLowerCase())\n    );\n    return filteredPerson;\n  };\n\n  const personToDisplay = nameFilter.trim() ? filtered() : persons;\n\n  const handledelete = (id) => {\n    const contactToDel = persons.find((person) => person.id === id);\n    if (window.confirm(`Delete ${contactToDel.name}?`)) {\n      phoneService\n        .del(id, contactToDel)\n        .then((response) => {\n          setPersons(persons.filter((person) => person.id !== id));\n        })\n        .catch((error) => {\n          setNotification(\n            `Information of ${contactToDel.name} has already been removed from server`\n          );\n          setTimeout(() => {\n            setNotification(null);\n          }, 5000);\n        });\n    }\n  };\n  return (\n    <>\n      {personToDisplay.map((person) => (\n        <ContactName\n          key={person.id}\n          person={person.name}\n          phoneNumber={person.number}\n          handledelete={() => handledelete(person.id)}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default ContactList;\n","import React from 'react'\n\nconst Filter = ({nameFilter, setNameFilter, persons}) =>{\n  const handleNameFilter = (event) => {\n    setNameFilter(event.target.value)\n    // console.log(event.target.value)\n  }\n  \n  return (\n    <form>\n      <h2>Search Contact</h2>\n      <input type=\"search\" placeholder=\"Type to search\" value={nameFilter} onChange={handleNameFilter}/>\n    </form>\n  )\n}\n\nexport default Filter","const Notifications = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className=\"notification\">{message}</div>;\n};\nexport default Notifications;\n","import React, { useState, useEffect } from \"react\";\nimport AddContact from \"./components/addContactform\";\nimport ContactList from \"./components/contactsDisplay\";\nimport Filter from \"./components/searchComp\";\nimport phoneService from \"./services/phonebook\";\nimport Notifications from \"./components/notification\";\nimport \"./index.css\";\n\nfunction App() {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNumber] = useState(\"\");\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [notification, setNotification] = useState(null);\n\n  useEffect(() => {\n    phoneService.getAll().then((response) => {\n      setPersons(response.data);\n    });\n  }, []);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n\n      <Notifications message={notification} />\n\n      <Filter\n        nameFilter={nameFilter}\n        setNameFilter={setNameFilter}\n        persons={persons}\n      />\n\n      <h2>Add New Contact</h2>\n\n      <AddContact\n        setNewName={setNewName}\n        newName={newName}\n        setPersons={setPersons}\n        setNumber={setNumber}\n        newNumber={newNumber}\n        persons={persons}\n        setNotification={setNotification}\n      />\n\n      <h2>Contact List</h2>\n\n      <ContactList\n        nameFilter={nameFilter}\n        persons={persons}\n        setPersons={setPersons}\n        setNotification={setNotification}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}